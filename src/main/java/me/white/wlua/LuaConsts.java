package me.white.wlua;

public class LuaConsts {
    // lua compile-time constants
    public static final String COPYRIGHT = LuaNatives.LUA_COPYRIGHT();
    public static final String AUTHORS = LuaNatives.LUA_AUTHORS();
    public static final String VERSION_MAJOR = LuaNatives.LUA_VERSION_MAJOR();
    public static final String VERSION_MINOR = LuaNatives.LUA_VERSION_MINOR();
    public static final String VERSION_RELEASE = LuaNatives.LUA_VERSION_RELEASE();
    public static final int VERSION_NUM = LuaNatives.LUA_VERSION_NUM();
    public static final int VERSION_RELEASE_NUM = LuaNatives.LUA_VERSION_RELEASE_NUM();
    public static final String SIGNATURE = LuaNatives.LUA_SIGNATURE();
    public static final int MULT_RET = LuaNatives.LUA_MULTRET();
    public static final int REGISTRY_INDEX = LuaNatives.LUA_REGISTRYINDEX();
    public static final int OK = LuaNatives.LUA_OK();
    public static final int YIELD = LuaNatives.LUA_YIELD();
    public static final int ERR_RUN = LuaNatives.LUA_ERRRUN();
    public static final int ERR_SYNTAX = LuaNatives.LUA_ERRSYNTAX();
    public static final int ERR_MEM = LuaNatives.LUA_ERRMEM();
    public static final int ERR_ERR = LuaNatives.LUA_ERRERR();
    public static final int TYPE_NONE = LuaNatives.LUA_TNONE();
    public static final int TYPE_NIL = LuaNatives.LUA_TNIL();
    public static final int TYPE_BOOLEAN = LuaNatives.LUA_TBOOLEAN();
    public static final int TYPE_LIGHT_USER_DATA = LuaNatives.LUA_TLIGHTUSERDATA();
    public static final int TYPE_NUMBER = LuaNatives.LUA_TNUMBER();
    public static final int TYPE_STRING = LuaNatives.LUA_TSTRING();
    public static final int TYPE_TABLE = LuaNatives.LUA_TTABLE();
    public static final int TYPE_FUNCTION = LuaNatives.LUA_TFUNCTION();
    public static final int TYPE_USER_DATA = LuaNatives.LUA_TUSERDATA();
    public static final int TYPE_THREAD = LuaNatives.LUA_TTHREAD();
    public static final int NUM_TYPES = LuaNatives.LUA_NUMTYPES();
    public static final int MIN_STACK = LuaNatives.LUA_MINSTACK();
    public static final int RIDX_GLOBALS = LuaNatives.LUA_RIDX_GLOBALS();
    public static final int RIDX_MAIN_THREAD = LuaNatives.LUA_RIDX_MAINTHREAD();
    public static final int RIDX_LAST = LuaNatives.LUA_RIDX_LAST();
    public static final int OP_ADD = LuaNatives.LUA_OPADD();
    public static final int OP_SUB = LuaNatives.LUA_OPSUB();
    public static final int OP_MUL = LuaNatives.LUA_OPMUL();
    public static final int OP_MOD = LuaNatives.LUA_OPMOD();
    public static final int OP_POW = LuaNatives.LUA_OPPOW();
    public static final int OP_DIV = LuaNatives.LUA_OPDIV();
    public static final int OP_IDIV = LuaNatives.LUA_OPIDIV();
    public static final int OP_BAND = LuaNatives.LUA_OPBAND();
    public static final int OP_BOR = LuaNatives.LUA_OPBOR();
    public static final int OP_BXOR = LuaNatives.LUA_OPBXOR();
    public static final int OP_SHL = LuaNatives.LUA_OPSHL();
    public static final int OP_SHR = LuaNatives.LUA_OPSHR();
    public static final int OP_UNM = LuaNatives.LUA_OPUNM();
    public static final int OP_BNOT = LuaNatives.LUA_OPBNOT();
    public static final int OP_EQ = LuaNatives.LUA_OPEQ();
    public static final int OP_LT = LuaNatives.LUA_OPLT();
    public static final int OP_LE = LuaNatives.LUA_OPLE();
    public static final int GC_STOP = LuaNatives.LUA_GCSTOP();
    public static final int GC_RESTART = LuaNatives.LUA_GCRESTART();
    public static final int GC_COLLECT = LuaNatives.LUA_GCCOLLECT();
    public static final int GC_COUNT = LuaNatives.LUA_GCCOUNT();
    public static final int GC_COUNT_B = LuaNatives.LUA_GCCOUNTB();
    public static final int GC_STEP = LuaNatives.LUA_GCSTEP();
    public static final int GC_IS_RUNNING = LuaNatives.LUA_GCISRUNNING();
    public static final int GC_GEN = LuaNatives.LUA_GCGEN();
    public static final int GC_INC = LuaNatives.LUA_GCINC();
    public static final int HOOK_CALL = LuaNatives.LUA_HOOKCALL();
    public static final int HOOK_RET = LuaNatives.LUA_HOOKRET();
    public static final int HOOK_LINE = LuaNatives.LUA_HOOKLINE();
    public static final int HOOK_COUNT = LuaNatives.LUA_HOOKCOUNT();
    public static final int HOOK_TAIL_CALL = LuaNatives.LUA_HOOKTAILCALL();
    public static final int MASK_CALL = LuaNatives.LUA_MASKCALL();
    public static final int MASK_RET = LuaNatives.LUA_MASKRET();
    public static final int MASK_LINE = LuaNatives.LUA_MASKLINE();
    public static final int MASK_COUNT = LuaNatives.LUA_MASKCOUNT();
    public static final String G_NAME = LuaNatives.LUA_GNAME();
    public static final String LOADED_TABLE = LuaNatives.LUA_LOADED_TABLE();
    public static final String PRELOAD_TABLE = LuaNatives.LUA_PRELOAD_TABLE();
    public static final int NO_REF = LuaNatives.LUA_NOREF();
    public static final int REF_NIL = LuaNatives.LUA_REFNIL();
    public static final String FILE_HANDLE = LuaNatives.LUA_FILEHANDLE();
}
